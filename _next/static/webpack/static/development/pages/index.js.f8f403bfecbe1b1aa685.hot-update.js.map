{"version":3,"file":"static/webpack/static/development/pages/index.js.f8f403bfecbe1b1aa685.hot-update.js","sources":["webpack:///./src/components/note/viewChildComponents/NoteList.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { deleteTask, doneTask } from '../../../redux/actions/actionTasks';\nimport { activeMain } from '../../../redux/actions/actionMain';\n\n// Materail UI\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\n// Component\nimport DeleteNotes from './DeleteNotes';\n\nconst NoteList = props => {\n  const { tasks, active } = props;\n\n  const handleActiveMain = item => {\n    props.activeMain('singleNote', item.title, item.content, item.date, item.id, item.done);\n  };\n\n  const handleToggle = item => {\n    if (item.done === false) {\n      props.doneTask(true, item.id);\n    } else {\n      props.doneTask(false, item.id);\n    }\n  };\n\n  const handleDeleteNote = id => {\n    props.deleteTask(id);\n\n    if (active.id == id || tasks.length === 1) {\n      props.activeMain('create');\n    }\n  };\n\n  const handleEditNote = item => {\n    props.activeMain('edit', item.title, item.content, item.date, item.id, item.done);\n  };\n\n  return (\n    <div className=\"list-tasks\">\n      <List className=\"note-list\">\n        {tasks.map(item => (\n          <ListItem key={item.id} dense button>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                onClick={() => handleToggle(item)}\n                checked={item.done === true}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': item.id }}\n              />\n            </ListItemIcon>\n            <Link href=\"/\" as={process.env.BACKEND_URL + '/'}>\n              <ListItemText\n                onClick={() => handleActiveMain(item)}\n                className={item.done === true ? 'done' : ''}\n                id={item.id}\n                primary={item.title}\n                secondary={`${item.date}`}\n              />\n            </Link>\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => handleDeleteNote(item.id)} edge=\"end\" aria-label=\"delete\">\n                <DeleteIcon />\n              </IconButton>\n              <Link\n                href={`/edit?id=${item.id}`}\n                as={`${process.env.BACKEND_URL}/edit?id=${item.id}`}\n              >\n                <IconButton onClick={() => handleEditNote(item)} edge=\"end\" aria-label=\"edit\">\n                  <EditIcon />\n                </IconButton>\n              </Link>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      {tasks.some(item => item.done === true) === true && <DeleteNotes selectedNotes={tasks} />}\n    </div>\n  );\n};\n\nNoteList.propTypes = {\n  active: PropTypes.object.isRequired,\n  tasks: PropTypes.array.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  activeMain: PropTypes.func.isRequired,\n  doneTask: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTask: bindActionCreators(deleteTask, dispatch),\n    activeMain: bindActionCreators(activeMain, dispatch),\n    doneTask: bindActionCreators(doneTask, dispatch),\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    active: state.mainReducer,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NoteList);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9BA;AAqCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;;;;A","sourceRoot":""}