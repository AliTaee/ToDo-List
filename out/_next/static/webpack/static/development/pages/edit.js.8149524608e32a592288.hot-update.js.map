{"version":3,"file":"static/webpack/static/development/pages/edit.js.8149524608e32a592288.hot-update.js","sources":["webpack:///./src/components/navigation/Menu.jsx","webpack:///./src/components/note/EditNote.jsx","webpack:///./src/components/note/ViewNotes.jsx","webpack:///./src/components/note/viewChildComponents/DeleteNotes.jsx","webpack:///./src/components/note/viewChildComponents/NoteList.jsx"],"sourcesContent":["import React from 'react';\nimport Link from 'next/link';\n\n// Icons\nimport HomeIcon from '@material-ui/icons/Home';\nimport InfoIcon from '@material-ui/icons/Info';\n\nconst Menu = () => (\n  <header>\n    <h2>Menu</h2>\n    <nav>\n      <ul>\n        <li className=\"nav-item\">\n          <Link href=\"/\">\n            <div>\n              <HomeIcon />\n              <span>Home</span>\n            </div>\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link href=\"/about\">\n            <div>\n              <InfoIcon />\n              <span>About Todo List</span>\n            </div>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Menu;\n","import React, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\n// Materail UI\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { editTask } from '../../redux/actions/actionTasks';\nimport { activeMain } from '../../redux/actions/actionMain';\n\nconst EditNote = props => {\n  const { activeData } = props;\n  let titleNote = useRef(null);\n\n  const [taskName, setTaskTitle] = useState('');\n  const [taskContent, setTaskContent] = useState('');\n  const [taskNameRequired, setError] = useState([false]);\n  const [successCreate, setMassage] = useState([false]);\n\n  useEffect(() => {\n    setTaskTitle(activeData.title);\n    setTaskContent(activeData.content);\n  }, [activeData]);\n\n  const titleIsEmpty = () => {\n    setError(true);\n    setMassage(false);\n    titleNote.current.focus();\n  };\n\n  const handleTaskName = e => {\n    setTaskTitle(e.target.value);\n  };\n\n  const handleTaskContent = e => {\n    setTaskContent(e.target.value);\n  };\n\n  const saveNote = event => {\n    event.preventDefault();\n\n    if (taskName === '' || taskName === undefined) {\n      titleIsEmpty();\n      return;\n    }\n\n    const newEditTask = Object.assign({}, activeData, {\n      title: taskName,\n      content: taskContent,\n      date: new Date()\n        .toISOString()\n        .replace('-', '/')\n        .split('T')[0]\n        .replace('-', '/'),\n    });\n    props.editTask(newEditTask);\n    props.activeMain('create');\n    clearForm();\n  };\n\n  const clearForm = () => {\n    setTaskTitle('');\n    setTaskContent('');\n    setError(false);\n    setMassage(true);\n    titleNote.current.focus();\n  };\n\n  return (\n    <section id=\"create-note\">\n      <h2>Edit Note</h2>\n      <form noValidate autoComplete=\"off\">\n        <TextField\n          required\n          label=\"Note Title\"\n          classes={{ root: 'note-titile' }}\n          variant=\"filled\"\n          type=\"text\"\n          id=\"title-task\"\n          fullWidth\n          autoFocus\n          inputRef={titleNote}\n          onChange={handleTaskName}\n          error={taskNameRequired === true}\n          value={taskName}\n          name=\"text\"\n        />\n        <TextField\n          multiline\n          label=\"Note Content\"\n          classes={{ root: 'note-desc' }}\n          variant=\"filled\"\n          type=\"text\"\n          id=\"content-task\"\n          fullWidth\n          rows={6}\n          margin=\"normal\"\n          onChange={handleTaskContent}\n          value={taskContent}\n          aria-label=\"note content\"\n        />\n        <span onClick={saveNote}>\n          {taskName === '' || taskName === undefined ? (\n            <Button variant=\"contained\" color=\"primary\">\n              Save Note\n            </Button>\n          ) : (\n            <Link href=\"/\">\n              <Button variant=\"contained\" color=\"primary\">\n                Save Note\n              </Button>\n            </Link>\n          )}\n        </span>\n        <Button onClick={clearForm} className=\"reset-form\" variant=\"contained\" color=\"secondary\">\n          Clear\n        </Button>\n      </form>\n      {successCreate === true && <p className=\"mobile success message\">Note saved successfully.</p>}\n    </section>\n  );\n};\n\nEditNote.propTypes = {\n  activeData: PropTypes.object.isRequired,\n  editTask: PropTypes.func.isRequired,\n  activeMain: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    editTask: bindActionCreators(editTask, dispatch),\n    activeMain: bindActionCreators(activeMain, dispatch),\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(EditNote);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\n// Redux\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { activeMain } from '../../redux/actions/actionMain';\n\n// Components\nimport NoteList from './viewChildComponents/NoteList';\n\n// Materail UI\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst View = props => {\n  const { tasks, active } = props;\n\n  const activeAddNote = () => {\n    props.activeMainDispatch('create');\n  };\n\n  return (\n    <section className=\"note-list-container\">\n      <h3>Note List</h3>\n      {active.name !== 'create' && (\n        <Link href=\"/\">\n          <Button onClick={activeAddNote} className=\"add-note\" variant=\"contained\" color=\"primary\">\n            Add Note <EditIcon />\n          </Button>\n        </Link>\n      )}\n      {tasks.length === 0 ? <p>No notes yet.</p> : <NoteList tasks={tasks} />}\n    </section>\n  );\n};\n\nView.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  activeMainDispatch: PropTypes.func.isRequired,\n  active: PropTypes.object.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    activeMainDispatch: bindActionCreators(activeMain, dispatch),\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    tasks: state.tasksReducer,\n    active: state.mainReducer,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(View);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { deleteTasks, doneTask } from '../../../redux/actions/actionTasks';\nimport { activeMain } from '../../../redux/actions/actionMain';\n\n// Materail UI - Button and Icon\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n// Materail UI - Dialog\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst DeleteNotes = props => {\n  const [open, setOpen] = React.useState(false);\n  const { selectedNotes } = props;\n\n  const getIds = selectedNotes => {\n    const ids = selectedNotes.filter(item => item.done === true).map(item => item.id);\n\n    if (selectedNotes.length === ids.length) {\n      props.activeMain('create');\n    }\n\n    return ids;\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n\n    const ids = getIds(selectedNotes);\n\n    for (let index = 0; index <= ids.length; index++) {\n      props.doneTask(false, ids[index]);\n    }\n  };\n\n  const handleDeleteAllNote = () => {\n    const deleteIds = getIds(selectedNotes);\n\n    props.deleteTasks(deleteIds);\n    props.activeMain('create');\n\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"delete-note\">\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-delete-title\"\n        aria-describedby=\"alert-dialog-title-description\"\n      >\n        <DialogTitle id=\"alert-dialog-delete-title\">{'Are you sure?'}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-title-description\">\n            This action will delete all selected notes.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"contained\" color=\"primary\">\n            Cancel\n          </Button>\n          <span onClick={handleDeleteAllNote}>\n            <Link href=\"/\">\n              <Button variant=\"contained\" color=\"secondary\" autoFocus>\n                Delete\n              </Button>\n            </Link>\n          </span>\n        </DialogActions>\n      </Dialog>\n      <Button onClick={handleClickOpen} variant=\"contained\" color=\"secondary\">\n        Delete Notes <DeleteIcon />\n      </Button>\n    </div>\n  );\n};\n\nDeleteNotes.propTypes = {\n  doneTask: PropTypes.func.isRequired,\n  activeMain: PropTypes.func.isRequired,\n  deleteTasks: PropTypes.func.isRequired,\n  selectedNotes: PropTypes.array.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTasks: bindActionCreators(deleteTasks, dispatch),\n    activeMain: bindActionCreators(activeMain, dispatch),\n    doneTask: bindActionCreators(doneTask, dispatch),\n  };\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(DeleteNotes);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\n// Redux\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { deleteTask, doneTask } from '../../../redux/actions/actionTasks';\nimport { activeMain } from '../../../redux/actions/actionMain';\n\n// Materail UI\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\n// Component\nimport DeleteNotes from './DeleteNotes';\n\nconst NoteList = props => {\n  const { tasks, active } = props;\n\n  const handleActiveMain = item => {\n    props.activeMain('singleNote', item.title, item.content, item.date, item.id, item.done);\n  };\n\n  const handleToggle = item => {\n    if (item.done === false) {\n      props.doneTask(true, item.id);\n    } else {\n      props.doneTask(false, item.id);\n    }\n  };\n\n  const handleDeleteNote = id => {\n    props.deleteTask(id);\n\n    if (active.id == id || tasks.length === 1) {\n      props.activeMain('create');\n    }\n  };\n\n  const handleEditNote = item => {\n    props.activeMain('edit', item.title, item.content, item.date, item.id, item.done);\n  };\n\n  return (\n    <div className=\"list-tasks\">\n      <List className=\"note-list\">\n        {tasks.map(item => (\n          <ListItem key={item.id} dense button>\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                onClick={() => handleToggle(item)}\n                checked={item.done === true}\n                tabIndex={-1}\n                disableRipple\n                inputProps={{ 'aria-labelledby': item.id }}\n              />\n            </ListItemIcon>\n            <Link href=\"/\">\n              <ListItemText\n                onClick={() => handleActiveMain(item)}\n                className={item.done === true ? 'done' : ''}\n                id={item.id}\n                primary={item.title}\n                secondary={`${item.date}`}\n              />\n            </Link>\n            <ListItemSecondaryAction>\n              <IconButton onClick={() => handleDeleteNote(item.id)} edge=\"end\" aria-label=\"delete\">\n                <DeleteIcon />\n              </IconButton>\n              <Link href={`/edit?id=${item.id}`}>\n                <IconButton onClick={() => handleEditNote(item)} edge=\"end\" aria-label=\"edit\">\n                  <EditIcon />\n                </IconButton>\n              </Link>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      {tasks.some(item => item.done === true) === true && <DeleteNotes selectedNotes={tasks} />}\n    </div>\n  );\n};\n\nNoteList.propTypes = {\n  active: PropTypes.object.isRequired,\n  tasks: PropTypes.array.isRequired,\n  deleteTask: PropTypes.func.isRequired,\n  activeMain: PropTypes.func.isRequired,\n  doneTask: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteTask: bindActionCreators(deleteTask, dispatch),\n    activeMain: bindActionCreators(activeMain, dispatch),\n    doneTask: bindActionCreators(doneTask, dispatch),\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    active: state.mainReducer,\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(NoteList);\n"],"mappings":"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","sourceRoot":""}