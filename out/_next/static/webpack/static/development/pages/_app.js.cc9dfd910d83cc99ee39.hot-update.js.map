{"version":3,"file":"static/webpack/static/development/pages/_app.js.cc9dfd910d83cc99ee39.hot-update.js","sources":["webpack:///./src/redux/reducers/tasksReducer.js"],"sourcesContent":["import * as type from '../actions/actionTypes';\nconst shortid = require('shortid');\n\nconst tasks = [];\n\nexport default function tasksReducer(state = tasks, action) {\n  switch (action.type) {\n    case type.INITIAL_LOCALSTORAGE: {\n      let initialState = Object.assign({}, action.payload.data, {});\n\n      return initialState;\n    }\n    case type.ADD_TASK: {\n      let taskWidthData = Object.assign({}, action.payload.newTask.taskReducer, {\n        date: new Date()\n          .toISOString()\n          .replace('-', '/')\n          .split('T')[0]\n          .replace('-', '/'),\n        id: shortid.generate(),\n        done: false,\n      });\n\n      return [...state, taskWidthData];\n    }\n    case type.DELETE_TASK: {\n      return state.filter(taskItem => taskItem.id !== action.payload.id);\n    }\n    case type.DELETE_TASKS: {\n      let deleteNotes = state;\n      for (let i = 0; i < action.payload.ids.length; i++) {\n        deleteNotes = deleteNotes.filter(item => item.id !== action.payload.ids[i]);\n      }\n\n      return deleteNotes;\n    }\n    case type.EDIT_TASK: {\n      let editTask = [...state];\n      editTask = editTask.map(item => {\n        if (item.id === action.payload.item.id) {\n          item = {\n            ...item,\n            id: action.payload.item.id,\n            title: action.payload.item.title,\n            content: action.payload.item.content,\n            done: action.payload.item.done,\n            date: new Date()\n              .toISOString()\n              .replace('-', '/')\n              .split('T')[0]\n              .replace('-', '/'),\n          };\n        }\n        return item;\n      });\n\n      return editTask;\n    }\n    case type.DONE_TASK: {\n      let doneTask = [...state];\n      doneTask = doneTask.map(item => {\n        if (item.id === action.payload.id) {\n          item = {\n            ...item,\n            done: action.payload.isDone,\n          };\n        }\n        return item;\n      });\n\n      return doneTask;\n    }\n\n    default:\n      return state;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AAPA;AACA;AASA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAFA;AAGA;AAAA;AAAA;AAHA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AANA;AAYA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AApEA;AAsEA;;;;A","sourceRoot":""}